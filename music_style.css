@import url('https://fonts.googleapis.com/css2?family=Chiron+GoRound+TC:wght@200..900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Ma+Shan+Zheng&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Tangerine:wght@400;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Long+Cang&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Gloria+Hallelujah&display=swap');

*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Make the page a column: header + flexible content */

body{
  margin: 0;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  font-family: "Poppins", sans-serif;
  overflow-x: hidden;
}



#bg-global {
  position: fixed !important;
  inset: 0 !important;
  z-index: -9999 !important;   /* far behind everything */
  pointer-events: none !important;
  overflow: hidden;
  opacity: 0.8;
}
#bg-global * { pointer-events: none !important; }

#bg-global canvas {
  width: 100% !important;
  height: 100% !important;
  display: block;
}

@media (prefers-reduced-motion: reduce) {
  #bg-global { display: none; }
}



/* Top nav with fixed height */
#desktop-nav{
  height: var(--nav-h);
  display: flex;
  align-items: center;
  justify-content: center; /* or space-around as you had */
}

/* The content area fills remaining space and centers the stack */
#music{
  flex: 1;                           /* take all remaining height */
  display: grid;
  background: none;
  align-items: center;        /* vertical */
  justify-items: center;     /* horizontal */
  padding-bottom: 0.5rem;         /* tiny breathing room; tweak */
}

/* Optional: if you want the inner wrapper to be the centering target */
.music-container{
  display: grid;
  place-items: center;
  
}

/* Keep the stack block centered */
.image-stack-root{
  margin: 0 auto; /* horizontal center fallback */
}


html{
  scroll-behavior: smooth;
  height: 100%;
}

p{
  color: rgb(118, 117, 117);
}


/* DESKTOP NAV */
/* Make sure the first-screen content is definitely clickable */
a,
.btn{
  transition: all 300ms ease;
}

#desktop-nav, #profile {
  position: relative;
  z-index: 10;
  pointer-events: auto;
}

nav,
.nav-links{
  display: flex;
}

nav{
  justify-content: space-around;
  align-items: center;
  height: 17vh;
  
}

.nav-links{
  gap: 3rem;
  list-style: none; 
  font-size: 1.5rem;
  
}

a{
  color: black;
  text-decoration: none;
  text-decoration-color: white;
}

a:hover{
  color: rgb(255, 244, 218);
  text-decoration: underline;
  text-decoration-color: rgb(252, 244, 225);
  text-underline-offset: 1rem;
}


/* HAMBURGER MENU */
#hamburger-nav{
  display: none;
  justify-content: flex-end;
  padding-right: 15px;
}

.hamburger-menu{
  position: relative;
  display: inline-block;
}

.hamburger-icon{
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: 24px;
  width: 30px;
  cursor: pointer;
}

.hamburger-icon span{
  width: 100%;
  height: 2px;
  background-color: black;
  transition: all 0.3 ease-in-out;
}
/* When closed, the dropdown catches nothing */
.menu-links {
  pointer-events: none;
}

/* When open, it becomes clickable again */
.menu-links.open {
  pointer-events: auto;
}

.menu-links{
  margin-top: 30px;
  position: fixed; 
  top: 56px;                /* below the icon */
  right: 12px;
  z-index: 20001;
 
  
  background-color: rgba(216, 234, 255, 0.5);
  border-radius: 20px;
  width:fit-content;
  max-height: 0;
  overflow: hidden;
  transition: all 0.3s ease-in-out;
}

.menu-links a{
  display: block;
  padding-bottom: 0;
  padding-left: 15px;
  padding-right: 15px;
  padding-top: 0;
  text-align: left;
  font-size: 1.05rem;
  color: black;
  text-decoration: none;
  transition: all 0.3s ease-in-out;
}

.menu-links a:hover{
  color: rgb(255, 244, 218);
  text-decoration: underline;
  text-decoration-color: rgb(252, 244, 225);
  text-underline-offset: 0.3rem;
}

.menu-links li:first-child a {
  margin-top: 15px;
}

.menu-links li:last-child a {
  margin-bottom: 15px;
}

.menu-links li{
  list-style: none;
}

.menu-links.open{
  max-height: 300px;
}

.hamburger-icon.open span:first-child {
  transform: rotate(45deg) translate(10px, 5px);
}

.hamburger-icon.open span:nth-child(2){
  opacity: 0;
}

.hamburger-icon.open span:last-child {
  transform: rotate(-45deg) translate(10px, -5px);
}

.hamburger-icon span:first-child{
  transform: none;
}

.hamburger-icon span:first-child{
  opacity: 1;
}

.hamburger-icon span:first-child{
  transform: none;
}


.hero{
  position: relative;
  min-height: var(--hero-h);   /* reserves vertical space */
  display: grid;
  place-items: center;         /* centers the .tw-wrap */
}

/* HAND-WRITTEN TEXT */
.tw-wrap {
position: static;            /* <-- remove absolute */
transform: none; /* centers both horizontally & vertically */
display: grid;
justify-items: center;
row-gap: 1.2rem;
text-align: center; /* align multi-line nicely */
}

.tw {
cursor: default;
display: block;
font-family: "Long Cang", cursive;
font-weight: 400;
font-size: 1.8rem;
font-style: normal;
white-space: nowrap;
overflow: hidden;
border-right: none;
width: 0;
transition: all 0.3s ease-in-out;
border-right: 2px solid transparent;  /* caret (made visible during blink) */

}

.line1:hover{
cursor: default;
color: rgb(255, 244, 218);
}

.line2:hover{
cursor: default;
color: rgb(255, 244, 218);
}

/* Line 1: 20 chars in "Today is a good day," */
.line1{
animation: typing1 2.8s steps(53, end) forwards,
           blink .7s step-end infinite;
}
@keyframes typing1 { to { width: 53ch; } }

/* Line 2: 27 chars in "Welcome to my Little Garden" */
.line2{
animation: typing2 2.2s steps(34, end) forwards 2.9s,
           blink .7s step-end infinite 2.9s; /* delay both animations */
}
@keyframes typing2 { to { width: 34ch; } }

@keyframes blink { 50% { border-color: transparent; } }







/* --- Stack --- */
:root{
 
  --stack-width: 494px;
  --stack-height: 450px;
  
  --gap: 10px;
  --perspective: 1200px;
  --hover-rotate: -35deg;
  --spring: cubic-bezier(0.22, 1, 0.36, 1);
  --shadow: 0 25px 60px rgba(0,0,0,.18), 0 10px 24px rgba(0,0,0,.12);
  --radius: 2px;
  --nav-h: 17vh; 
  --hero-h: 17vh;

  --card-size: 220px; 

  --depth-step: 150px;   /* was ~100px; bigger = more spread after rotate */
  --vert-step:   40px;

  /* Swipe animation timing */
  --swipe-ms: 520ms;
  --enter-ms: 520ms;

  --thick: 5px;                /* thickness depth */
  --edge-gloss: rgba(255,255,255,.35);
  --edge-shade: rgba(0,0,0,.22);
  --top-shrink: .25;            /* tweak this until it “closes” nicely */
}


.image-stack-root{
  margin-top: -70px;  /* negative = pull upward */
  width: var(--stack-width);
  height: var(--stack-height);
  display:flex;
  align-items:center;
  justify-content:center;
  overflow: visible;
  position: relative;
  z-index: 1;
}

.image-stack-root{ --edge-alpha: 0; }
.image-stack-root:hover,
.image-stack-root:focus-within{ --edge-alpha: 1; }

.image-stack-persp{
  
  width: min-content;
  height: min-content;
  display:flex;
  align-items:center;
  justify-content:center;
  transform-style: preserve-3d;
  perspective: var(--perspective);
  gap: var(--gap);
  position: relative;
}

.stack-rotator{
  position: relative;
  width: var(--card-size);          /* front card width */
  height: var(--card-size);
  transform-style: preserve-3d;
  transition: transform 400ms var(--spring);
  will-change: transform;
}

/* Rotate the entire stack on container hover */
.image-stack-root:hover .stack-rotator{
  transform: translateX(40px) rotateY(var(--hover-rotate));
}

.stack-card{
  position:absolute;
  left:0;
  right:0;
  margin:auto;
  width: var(--card-size);
  height: var(--card-size);
  /* border-radius: var(--radius); */
  box-shadow: var(--shadow);
  overflow: clip;
  backface-visibility: hidden;
  will-change: transform, box-shadow;
  transition: transform 300ms ease, box-shadow 300ms ease;
  
  display:block;
  cursor: pointer;
  transform-style: preserve-3d;
  overflow: visible;            /* allow the 3D faces to show */
}

/* Per-card lift (keeps original depth while rising) */
.stack-card:hover{
  transform: translateY(-20px) translateZ(var(--lift-z, 0));
  box-shadow: 0 30px 80px rgba(0,0,0,.25), 0 12px 32px rgba(0,0,0,.15);
  z-index: 999;
}

.stack-card > img{
  width: 100%;
  height: 100%;
  object-fit: cover;
  display:block;
  border-radius: var(--radius);
  transform: translateZ(0.01px); /* avoid z-fighting with faces */
 
}

/* TOP face (hinged along the top edge, rotated backward the viewer) */
.stack-card::before{
  background-image:
  linear-gradient(to top, var(--edge-shade), var(--edge-gloss)), /* bevel */
  var(--edge-img);                                              /* image */
  background-repeat: no-repeat, no-repeat;
  /* map the image to the exact card size so we “sample” the top edge */
  background-size: var(--card-size) var(--card-size), var(--card-size) var(--card-size);  background-position: top center, top center;
  background-blend-mode: multiply, normal;
  filter: saturate(1.05) brightness(.95); /* optional—looks more like an edge */

  content: "";
  position: absolute;
  left: 0;
  top: calc(-1 * var(--thick) * 0.9 );
  height: calc(var(--thick) * 0.9);
  width: 100%;
  /* a subtle gradient so it looks like a real edge */
  
  transform-origin: bottom;
  transform: rotateX(60deg);
  /* optional soft shadow bleed */
  box-shadow: 0 2px 8px rgba(0,0,0,.15);
}

/* RIGHT face (hinged along the right edge, rotated backward the viewer) */
.stack-card::after{
  background-image:
  linear-gradient(to right, var(--edge-shade), var(--edge-gloss)),
  var(--edge-img);
  background-repeat: no-repeat, no-repeat;
  background-size: var(--card-size) var(--card-size), var(--card-size) var(--card-size);  background-position: center right, center right;
  background-blend-mode: multiply, normal;
  filter: saturate(1.05) brightness(.95);

  content: "";
  position: absolute;
  right: calc(-1 * var(--thick));
  top: 0;
  width: var(--thick);
  height: 100%;
  
  transform-origin: left;
  transform:  skewY(-20deg);
  box-shadow: 2px 0 8px rgba(0,0,0,.15);
  opacity: var(--edge-alpha);
  transition: opacity .18s ease;
}

/* Depth & vertical stagger for 5 cards (back → front) */
.card-1{ top: -80px; transform: translateZ(-200px); --lift-z: -200px; --k: -2;}
.card-2{ top:  -40px; transform: translateZ(-100px); --lift-z: -100px; --k: -1;}
.card-3{ top:    0px; transform: translateZ(   0px); --lift-z:    0px; --k: -0;}
.card-4{ top:   40px; transform: translateZ( 100px); --lift-z:  100px; --k: 1;}
.card-5{ top:   80px; transform: translateZ( 200px); --lift-z:  200px; --k: 2;}

/* Focus ring for keyboard users */
.stack-card:focus-within{
  outline: 2px solid #5b8cff;
  outline-offset: 2px;
}

.card-img{
  opacity: 0.8;
}

.card-1, .card-2, .card-3, .card-4, .card-5{
  top:        calc(var(--k) * var(--vert-step));
  transform:  translateZ(calc(var(--k) * var(--depth-step)));
  --lift-z:   calc(var(--k) * var(--depth-step));
}



/* --- Screen-edge arrows --- */
/* Use your own arrow color via currentColor */
/* rotate the “chevron up” to become left/right */
/* base button positioning */

.nav-arrow{
position: absolute;
top: 50%;
transform: translateY(-50%); /* centers vertically */
z-index: 2;
cursor: pointer;
background: none;
border: none;
box-shadow: none;
padding: 0;
color: rgb(113,113,113);

}

/* ICON — use variables so transforms compose instead of override */
.nav-icon{
width: 50px;
height: 50px;
stroke-width: 1.5;
color: rgb(113,113,113);
filter: drop-shadow(0 0 6px white);
transition: color .2s ease, transform .15s ease;
/* Compose: rotation + (optional) lift + (optional) scale */
transform: rotate(var(--rot, 0deg)) translateY(var(--lift, 0)) scale(var(--scale, 1));
}

/* set the rotation for left/right once */
.nav-left  .nav-icon { --rot: -90deg;
}
.nav-right .nav-icon { --rot:  90deg; }

.nav-icon:hover { color: rgb(255, 249, 215); }

/* on press, only change the lift/scale variables */
.nav-arrow:active .nav-icon{
--lift: -10%;
--scale: 0.98;
}

.nav-left  { left: 24px; }
.nav-right { right: 24px; }


/* Hide arrows on tiny screens (optional) */
@media (max-width: 560px){
  .nav-arrow{ display:none; }
  :root{
    --stack-width: 100vw;
    --stack-height: 360px;
    --card-size: min(80vw, 260px);  /* keeps it square and responsive */

  }
  .stack-rotator{ width: var(--card-size); height: var(--card-size); }
}

/* Key-tip tooltips for arrows — keep them on-screen */
@media (hover: hover) and (pointer: fine) {
  .nav-arrow::after,
  .nav-arrow::before { pointer-events: none; position: absolute; opacity: 0; transition: opacity .18s ease, transform .18s ease; }

  .nav-arrow.show-hint::after,
  .nav-arrow.show-hint::before{
    opacity: 1;
  }

  
  /* Base bubble */
  .nav-arrow::after {
    content: attr(data-hint);
    padding: 8px 10px;
    border-radius: 10px;
    background: rgba(79, 79, 79, 0.75);
    color: #fff;
    font-size: 12px;
    line-height: 1.2;
    box-shadow: 0 6px 18px rgba(0,0,0,.25);
    white-space: nowrap;       /* keep single line */
    z-index: 3;
    position: absolute;
    max-width: 220px;
  }
  /* Base caret */
  .nav-arrow::before {
    content: "";
    border: 6px solid transparent;
    z-index: 3;
  }

  /* LEFT ARROW — show bubble to the right of the button */
  .nav-left::after {
    left: 100%;                /* start at right edge of button */
    top: 50%;
    transform: translate(10px, -50%); /* small gap */
  }
  .nav-left::before {
    left: 100%;
    top: 50%;
    transform: translate(0, -50%);
    border-left-color: rgba(0,0,0,.75);  /* caret points to button */
  }

  /* RIGHT ARROW — show bubble to the left of the button */
  .nav-right::after {
    right: 100%;               /* start at left edge of button */
    top: 50%;
    transform: translate(-10px, -50%);
  }
  .nav-right::before {
    right: 100%;
    top: 50%;
    transform: translate(0, -50%);
    border-right-color: rgba(0,0,0,.75);
  }


}



/* --- Swipe / Enter animations --- */
@keyframes swipeOutLeft {
  0% { opacity: 1; transform: translateX(0); }
  100% { opacity: 0; transform: translateX(-120vw); }
}
@keyframes swipeOutRight {
  0% { opacity: 1; transform: translateX(0); }
  100% { opacity: 0; transform: translateX(120vw); }
}
@keyframes enterFromRight {
  0% { opacity: 0; transform: translateX(120vw); }
  100% { opacity: 1; transform: translateX(0); }
}
@keyframes enterFromLeft {
  0% { opacity: 0; transform: translateX(-120vw); }
  100% { opacity: 1; transform: translateX(0); }
}






/* applied to the *perspective group* so all 5 cards move together */
.anim-out-left  { animation: swipeOutLeft  var(--swipe-ms) ease forwards; }
.anim-out-right { animation: swipeOutRight var(--swipe-ms) ease forwards; }
.anim-in-right  { animation: enterFromRight var(--enter-ms) ease forwards; }
.anim-in-left   { animation: enterFromLeft  var(--enter-ms) ease forwards; }

/* --- Pop-out viewer (backdrop + close) --- */
.popout-backdrop{
  position: fixed;
  inset: 0;
  background: radial-gradient(1200px 800px at 50% 20%, rgba(20,24,38,.72), rgba(7,12,24,.85));
  backdrop-filter: blur(2px);
  opacity: 0;
  pointer-events: none;
  transition: opacity .35s ease;
  z-index: 9000;
}
.popout-backdrop.show{
  opacity: 1;
  pointer-events: auto;
}

.popout-close{
  position: fixed;
  top: 16px;
  right: 22px;
  z-index: 10050;
  width: 40px; height: 40px;
  border-radius: 999px;
  border: 1px solid rgba(255,255,255,.25);
  background: rgba(255,255,255,.85);
  display: grid;
  place-items: center;
  box-shadow: 0 10px 24px rgba(0,0,0,.25);
  cursor: pointer;
  transition: transform .2s ease, 
              box-shadow .2s ease, 
              background .2s ease,
              opacity .5s ease;
  opacity: 0;
  pointer-events: none;
}
.popout-close svg { width: 22px; height: 22px; stroke:#111; stroke-width:2; fill:none; }
.popout-close.show { opacity: 1; pointer-events: auto; }
.popout-close:hover { transform: scale(1.06); box-shadow: 0 14px 32px rgba(0,0,0,.3); background:#fff; }

@media (prefers-reduced-motion: reduce){
  .image-stack-root:hover .stack-rotator{ transform: none; }
  .anim-out-left, .anim-out-right, .anim-in-right, .anim-in-left { animation: none !important; }
}





/* The animated container that holds the image + buttons */
.popout-layer{
  position: fixed;
  z-index: 20000;      /* bump a little higher just in case */
  isolation: isolate;  /* <-- ensures predictable stacking within */
  border-radius: 20px;
  box-shadow: 0 30px 80px rgba(0,0,0,.35), 0 16px 40px rgba(0,0,0,.25);
  overflow: hidden;               /* keeps buttons clipped nicely on corners */
  will-change: left, top, width, height, transform;
}

/* The image inside the layer fills it */
.popout-layer > img{
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}

/* Toolbar that sits on the card */
.popout-toolbar{
  position: absolute;
  left: 50%;
  bottom: 12px;
  transform: translateX(-50%);
  display: flex;
  gap: 10px;
  padding: 8px 10px;
  background: rgba(0,0,0,.35);
  backdrop-filter: blur(6px);
  border-radius: 999px;
  opacity: 0;
  transition: opacity .25s ease;
}

.popout-toolbar.show{ opacity: 1; }

.popout-toolbar button{
  appearance: none;
  border: none;
  border-radius: 999px;
  padding: 8px 12px;
  font-size: 13px;
  color: #111;
  background: rgba(255,255,255,.9);
  cursor: pointer;
}
.popout-toolbar button:hover{ background: #fff; }




/* container that holds the controls */
.popout-controls{
  
  flex-direction: column;      /* <— key change */
  
  justify-content: center;
  gap: 15px;                   /* nice spacing between blocks */
  padding: 18px 22px;
  width: min(560px, 90%);      /* keep a sensible width */
  text-align: center;
  align-items: center;
  position: absolute;
  left: 50%;
  bottom: 40px;
  transform: translateX(-50%);
  
  border-radius: 30px;
  background: rgba(183, 183, 183, 0.38);
  backdrop-filter: blur(6px);
  display: flex;
  align-items: center;
  opacity: 0;
  transition: opacity .25s ease;
  z-index: 10001;           /* above the image in the layer */
}
.popout-controls.show{ opacity: 1; }

.popout-controls .controls-row{
  display: inline-flex;
  align-items: center;
  gap: 10px;
}

.popout-controls .btn-icon{
  appearance: none;
  border: 0;
  border-radius: 999px;
  padding: 6px 10px;
  font-size: 14px;
  line-height: 1;
  cursor: pointer;
  background: rgba(255,255,255,.92);
  color: #111;
}

.popout-controls .time{
  font: 600 12px/1.1 system-ui, -apple-system, Segoe UI, Roboto, sans-serif;
  color: #fff;
  opacity: .95;
  min-width: 34px;
  text-align: right;
}

.popout-controls .seek{
  width: 220px;
  height: 6px;
  margin: 0;
}

.popout-controls h2{
  font-size: 25px;
  text-align: center;
  font-weight: 500;
  margin: 0;
}

.popout-controls h3{
  font-size: 18px;
  text-align: center;
  font-weight: 500;
  margin: 10;
}


/* A mask inside the layer that clips the image + controls to rounded corners */
.popout-card-mask{
  position: absolute;
  inset: 0;
  border-radius: 20px;
  overflow: hidden;
  pointer-events: none; /* let children decide; we’ll re-enable inside */
}

/* Re-enable interactivity inside the mask */
.popout-card-mask > * { pointer-events: auto; }

/* Make sure the outer layer can show the bubble outside edges */
.popout-layer{ overflow: visible; }



.player-progress{
  background-color: #fff;
  border-radius: 5px;
  cursor: pointer;
  
  height: 6px;
  width: 90%;
  margin: 0;
}

.progress{
  background-color: #212121;
  border-radius: 5px;
  height: 100%;
  width: 0%;
  transition: width 0.1s linear;
}

.music-duration{
  position: static;
  margin-top: 8px;
  display: flex;
  justify-content: space-between;
}

.player-controls{
  
  position: static;        /* remove relative/left/top offsets */
  width: 90%;              /* match the progress bar width */
  display: flex;
  justify-content: center; /* center icons in the row */
  align-items: center;
  gap: 28px;               /* even spacing between icons */
  margin-top: 10px;
}

.fa-solid{
  font-size: 30px;
  color: #000000;
  margin: 0;
  cursor: pointer;
  user-select: none;
  transition: all 0.3s ease;
}

.fa-solid:hover{
  filter: brightness(40%);
}

.play-button{
  font-size: 44px;
  position: relative;
  top: 3px;
}

.player-controls i{
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 52px;
  height: 52px;
  font-size: 32px;
  line-height: 1;          /* kill font baseline effects */
  vertical-align: middle;  /* override FA’s default offset */
  margin: 0;
}

/* keep play larger but still centered */
.player-controls .play-button{
  font-size: 40px;
  position: static;  /* remove top:3px */
}





.popout-note{
  display: none;                 /* hidden when there’s no note */
  position: absolute;
  
  top: 25%;
    /* center it and make it narrower than the card */
    left: 15%;
    transform: translateX(-50%);
    width: clamp(220px, 70%, 520px);     /* target ~70% of card */
    max-width: calc(100% - 28px);        /* never spill past 14px side insets */
                   /* <-- constrain to card edges */
  transform: none;               /* no centering transform */
               
  box-sizing: border-box;
  padding: 10px 12px;
  border-radius: 12px;
  background: rgba(255,255,255,0.52);
  font-family: "Gloria Hallelujah", cursive;
  font-weight: 400;
  font-style: normal;
  font-size: 1.3rem;
  color: #111;
  
  line-height: 1.35;
  text-align: center;
  z-index: 10002;                /* above controls */
  opacity: 0;
  transition: opacity .25s ease;
  overflow: auto;            /* keep content inside */
  word-break: break-word;        /* break long words */
  overflow-wrap: anywhere;
}
.popout-note.show{ opacity: 1; }

/* caret + wrapping-friendly */
.popout-note .tw-note{
  display: inline;
  white-space: normal;           /* <-- allow wrapping */
  border-right: 2px solid rgba(0,0,0,.55);
  animation: blink .7s step-end infinite;
}
@keyframes blink { 50% { border-color: transparent; } }

/* —— Freeze colors in the popout —— */

/* Text */
.popout-controls h2,
.popout-controls h3,
.popout-controls .music-duration span,
.popout-note{
  color: #111;
  transition: none;            /* optional: no fade on hover */
}
.popout-controls h2:hover,
.popout-controls h3:hover,
.popout-controls ,
.popout-note:hover{
  color: rgb(255, 249, 215);                /* keep same color on hover */
  text-decoration: none;
  filter: none;
  cursor: default;
  transition: 0.3s ease-in-out;
}
.music-duration span:hover{
  color: rgb(255, 249, 215);                /* keep same color on hover */
  text-decoration: none;
  filter: none;
}

/* Icons (Font Awesome) */
.popout-controls .fa-solid{
  color: #000;
  filter: none;
  transition: transform .15s ease;  /* tiny feedback only, optional */
}
.popout-controls .fa-solid:hover{
  color: rgb(178, 172, 140) ;   /* override any global hover color */
  filter: none;  /* cancel global brightness change */
  transform: none; /* or keep a tiny scale if you like */
}

/* If your global rule is very strong, increase specificity: */
body .popout-controls .fa-solid:hover{ color:rgb(178, 172, 140)!important; filter:none !important; }





/* --- Note bubble button --- */
.note-bubble{
  position: absolute;
  top: 5px;
  right: -50px;
 
  z-index: 10003;              /* above .popout-controls and image */
  width: 44px; height: 44px;
  border-radius: 999px;
  border: none;
  background: rgba(213, 213, 213, 0.52);
  box-shadow: 0 10px 24px rgba(0,0,0,.25);
  display: grid;
  place-items: center;
  cursor: pointer;
  transition: transform .18s ease-in, 
  box-shadow .18s ease-in, background .18s ease-in;
}
.note-bubble:hover{
  transform:  scale(1.06);
  box-shadow: 0 14px 32px rgba(0,0,0,.30);
  background: #fff;
}
.note-bubble:active{ transform: scale(.95); }

.note-bubble svg{
  width: 22px; height: 22px;
  stroke: #111; fill: none; stroke-width: 2;
}

/* Ensure the note box can float above controls if needed */
.popout-note{ z-index: 10004; }

.note-bubble {
  opacity: 1;
  transition: opacity .2s ease, transform .18s ease;
}

.note-bubble.hiding {
  opacity: 0;
  pointer-events: none;
}

/* Reserve space for the controls and keep note from colliding */
.popout-layer { --controls-h: 160px; } /* estimated height of controls block */

@media (max-width: 820px), (max-height: 760px) {
  /* keep the bubble inside on tight screens */
  .note-bubble { right: -40px; top: 8px; }

  /* controls: a bit narrower, slightly smaller text */
  .popout-controls {
    width: 92%;
    bottom: 10px;
    padding: 14px 16px;
    gap: 10px;
  }
  .popout-controls h2 { font-size: 20px; }
  .popout-controls h3 { font-size: 14px; }
  .player-controls i  { width: 44px; height: 44px; font-size: 28px; }
  .player-progress    { height: 5px; }

  /* note: center horizontally, cap its height so it can't hit controls */
  .popout-note {
    left: 50%;
    transform: translateX(-50%);
    top: 10px;
    width: calc(100% - 24px);
    max-width: none;
    /* Leave room for controls (+gap). Adjust 24px if you want more/less gap. */
    max-height: calc(100% - var(--controls-h) - 24px);
    overflow: auto;            /* scroll if the note is long */
  }
}

/* Even tighter screens: shrink reserved controls height a bit */
@media (max-width: 560px), (max-height: 640px) {
  .popout-layer { --controls-h: 150px; }
  .popout-controls { width: 94%; }
  .popout-controls h2 { font-size: 18px; }
  .popout-controls h3 { font-size: 13px; }
  .player-controls { gap: 20px; }
  .note-bubble { right: -40px; top: 6px; }
}

/* Ultra small: keep everyone usable */
@media (max-width: 420px), (max-height: 540px) {
  .popout-layer { --controls-h: 140px; }
  .popout-controls { width: 96%; padding: 12px 12px; }
  .popout-controls .play-button { font-size: 34px; }
  .player-controls i { width: 40px; height: 40px; font-size: 24px; }
  .popout-note { font-size: 1.05rem; padding: 8px 10px; }
}
